{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","key","src","concat","alt","CardList","monsters","map","monster","card_component","SearchBox","onChangeHandler","placeholder","type","onChange","App","_useState","useState","_useState2","Object","slicedToArray","searchString","setSearchString","_useState3","_useState4","setMonsters","_useState5","_useState6","filteredMonsters","setFilteredMonsters","useEffect","fetch","then","response","json","users","newFilteredMonsters","filter","toLowerCase","includes","search_box_component","event","searchFieldString","target","value","card_list_components","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"yQAiBeA,eAfF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,MACxB,OACEC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBAAiBC,IAAKP,GACvCG,EAAAC,EAAAC,cAAA,OACEG,IAAG,wBAAAC,OAA0BT,EAA1B,0BACHU,IAAG,WAAAD,OAAaR,KAElBE,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,OCKGS,EAZE,SAAAZ,GAAkB,IAAfa,EAAeb,EAAfa,SAElB,OACET,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXM,EAASC,IAAI,SAACC,GAAY,IACjBd,EAAoBc,EAApBd,GAAIC,EAAgBa,EAAhBb,KAAMC,EAAUY,EAAVZ,MAClB,OAAOC,EAAAC,EAAAC,cAACU,EAAD,CAAMf,GAAIA,EAAIC,KAAMA,EAAMC,MAAOA,EAAOK,IAAKP,QCE7CgB,EAXG,SAAAjB,GAAiD,IAA9CkB,EAA8ClB,EAA9CkB,gBAAiBX,EAA6BP,EAA7BO,UAAWY,EAAkBnB,EAAlBmB,YAC/C,OACEf,EAAAC,EAAAC,cAAA,SACEC,UAAS,cAAAG,OAAgBH,GACzBa,KAAK,SACLD,YAAaA,EACbE,SAAUH,KCoCDI,SArCH,WAAM,IAAAC,EACwBC,mBAAS,IADjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACKI,EADLJ,EAAA,GAAAK,EAEgBN,mBAAS,IAFzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETjB,EAFSkB,EAAA,GAECC,EAFDD,EAAA,GAAAE,EAGgCT,mBAASX,GAHzCqB,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTE,EAHSD,EAAA,GAGSE,EAHTF,EAAA,GAKhBG,oBAAU,WACRC,MAAM,6CACHC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAAD,OAAWV,EAAYU,MAC9B,IAEHL,oBAAU,WACR,IAAMM,EAAsB9B,EAAS+B,OAAO,SAAC7B,GAC3C,OAAOA,EAAQb,KAAK2C,cAAcC,SAASlB,KAG7CQ,EAAoBO,IACnB,CAAC9B,EAAUe,IAOd,OACExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,oBACAH,EAAAC,EAAAC,cAACyC,EAAD,CACE7B,gBATiB,SAAC8B,GACtB,IAAMC,EAAoBD,EAAME,OAAOC,MAAMN,cAC7ChB,EAAgBoB,IAQZ9B,YAAa,kBACbZ,UAAW,uBAEbH,EAAAC,EAAAC,cAAC8C,EAAD,CAAUvC,SAAUsB,OC1BXkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlB,KAAAiB,EAAAE,KAAA,UAAqBnB,KAAK,SAAAvC,GAAiD,IAA9C2D,EAA8C3D,EAA9C2D,OAAQC,EAAsC5D,EAAtC4D,OAAQC,EAA8B7D,EAA9B6D,OAAQC,EAAsB9D,EAAtB8D,OAAQC,EAAc/D,EAAd+D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,QAOJjB","file":"static/js/main.2387e48f.chunk.js","sourcesContent":["import \"./card.style.css\";\r\nimport React, { Component } from \"react\";\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <li>\r\n      <section className=\"card-container\" key={id}>\r\n        <img\r\n          src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n          alt={`monster ${name}`}\r\n        />\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import \"./card-list.style.css\";\r\nimport Card from \"../card/card.component\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst CardList = ({ monsters }) => {\r\n  // when props change, the render will be called\r\n  return (\r\n    <ul className=\"card-list\">\r\n      {monsters.map((monster) => {\r\n        const { id, name, email } = monster;\r\n        return <Card id={id} name={name} email={email} key={id} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { Component } from \"react\";\r\nconst SearchBox = ({ onChangeHandler, className, placeholder }) => {\r\n  return (\r\n    <input\r\n      className={`search-box ${className}`}\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={onChangeHandler}\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.components\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  useEffect(() => {\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, []);\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchString);\n    });\n\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchString]);\n\n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLowerCase();\n    setSearchString(searchFieldString);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Monsters Rolodex</h1>\n      <SearchBox\n        onChangeHandler={onSearchChange}\n        placeholder={\"search monsters\"}\n        className={\"monster-search-box\"}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}